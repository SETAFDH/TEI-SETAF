namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace ns1 = "http://www.w3.org/1999/xhtml"
namespace rng = "http://relaxng.org/ns/structure/1.0"
namespace sch = "http://purl.oclc.org/dsdl/schematron"
default namespace tei = "http://www.tei-c.org/ns/1.0"
namespace teix = "http://www.tei-c.org/ns/Examples"
namespace xi = "http://www.w3.org/2001/XInclude"
namespace xlink = "http://www.w3.org/1999/xlink"

# Schema generated from ODD source 2025-08-28T12:45:20Z. . 
# TEI Edition: P5 VersionÂ 4.8.1. Last updated on 1st November 2024, revision 0a2bff95a 
# TEI Edition Location: https://www.tei-c.org/Vault/P5/4.8.1/ 
#

# [https://creativecommons.org/licenses/by/4.0/]  Creative Commons Attribution 4.0 CC BY 4.0
macro.abContent = (text | model.paraPart | ab)*
macro.paraContent = (text | model.paraPart)*
macro.phraseSeq =
  (text
   | model.gLike
   | model.attributable
   | model.phrase
   | model.global)*
macro.phraseSeq.limited = (text | model.limitedPhrase | model.global)*
macro.specialPara =
  (text
   | model.gLike
   | model.phrase
   | model.inter
   | model.divPart
   | model.global)*
macro.xtext = (text | model.gLike)*
att.ascribed.attributes = att.ascribed.attribute.who
att.ascribed.attribute.who =
  
  ## indicates the person, or group of people, to whom the element content is ascribed.
  attribute who {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.canonical.attributes =
  att.canonical.attribute.key, att.canonical.attribute.ref
att.canonical.attribute.key =
  
  ## provides an externally-defined means of identifying the entity (or entities) being named, using a coded value of some kind.
  attribute key { xsd:string }?
att.canonical.attribute.ref =
  
  ## (reference) provides an explicit means of locating a full definition or identity for the entity being named by means of one or more URIs.
  attribute ref {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.dimensions.attributes =
  att.dimensions.attribute.unit, att.dimensions.attribute.extent
att.dimensions.attribute.unit =
  
  ## names the unit used for the measurement
  ## Suggested values include: 1] cm (centimetres); 2] mm (millimetres); 3] in (inches); 4] line; 5] char (characters)
  attribute unit {
    
    ## (centimetres) 
    "cm"
    | 
      ## (millimetres) 
      "mm"
    | 
      ## (inches) 
      "in"
    | 
      ## lines of text
      "line"
    | 
      ## (characters) characters of text
      "char"
    | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
att.dimensions.attribute.extent =
  
  ## indicates the size of the object concerned using a project-specific vocabulary combining quantity and units in a single string of words.
  attribute extent { xsd:string }?
att.cmc.attributes = att.cmc.attribute.generatedBy
att.cmc.attribute.generatedBy =
  
  ## (generated by) categorizes how the content of an element was generated in a CMC environment.
  ## Suggested values include: 1] human; 2] template; 3] system; 4] bot; 5] unspecified
  attribute generatedBy {
    
    ## the content was naturally typed or spoken by a human user
    "human"
    | 
      ## the content was generated after a human user activated a template for its insertion
      "template"
    | 
      ## the content was generated by the system, i.e. the CMC environment
      "system"
    | 
      ## the content was generated by a bot, i.e. a non-human agent, typically one that is not part of the CMC environment itself
      "bot"
    | 
      ## the content was generated by an unknown or unspecified process
      "unspecified"
    | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
sch:pattern [
  id =
    "myTEI-att.cmc-generatedBy-CMC_generatedBy_within_post-constraint-rule-1"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@generatedBy]"
    "\x{a}" ~
    "         "
    sch:assert [
      test = "ancestor-or-self::tei:post"
      "The @generatedBy attribute is for use within a <post> element."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
att.datable.w3c.attributes =
  att.datable.w3c.attribute.when,
  att.datable.w3c.attribute.notBefore,
  att.datable.w3c.attribute.notAfter,
  att.datable.w3c.attribute.from,
  att.datable.w3c.attribute.to
att.datable.w3c.attribute.when =
  
  ## supplies the value of the date or time in a standard form, e.g. yyyy-mm-dd.
  attribute when {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
att.datable.w3c.attribute.notBefore =
  
  ## specifies the earliest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notBefore {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
att.datable.w3c.attribute.notAfter =
  
  ## specifies the latest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notAfter {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
att.datable.w3c.attribute.from =
  
  ## indicates the starting point of the period in standard form, e.g. yyyy-mm-dd.
  attribute from {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
att.datable.w3c.attribute.to =
  
  ## indicates the ending point of the period in standard form, e.g. yyyy-mm-dd.
  attribute to {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
sch:pattern [
  id = "myTEI-att.datable.w3c-att-datable-w3c-when-constraint-rule-2"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@when]"
    "\x{a}" ~
    "         "
    sch:report [
      test = "@notBefore|@notAfter|@from|@to"
      role = "nonfatal"
      "The @when attribute cannot be used with any other att.datable.w3c attributes."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
sch:pattern [
  id = "myTEI-att.datable.w3c-att-datable-w3c-from-constraint-rule-3"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@from]"
    "\x{a}" ~
    "         "
    sch:report [
      test = "@notBefore"
      role = "nonfatal"
      "The @from and @notBefore attributes cannot be used together."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
sch:pattern [
  id = "myTEI-att.datable.w3c-att-datable-w3c-to-constraint-rule-4"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@to]"
    "\x{a}" ~
    "         "
    sch:report [
      test = "@notAfter"
      role = "nonfatal"
      "The @to and @notAfter attributes cannot be used together."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
att.datable.attributes = att.datable.w3c.attributes
att.global.responsibility.attributes =
  att.global.responsibility.attribute.cert,
  att.global.responsibility.attribute.resp
att.global.responsibility.attribute.cert =
  
  ## (certainty) signifies the degree of certainty associated with the intervention or interpretation.
  attribute cert {
    xsd:double { minInclusive = "0" maxInclusive = "1" }
    | (
       ##
       "high"
       | 
         ##
         "medium"
       | 
         ##
         "low"
       | 
         ##
         "unknown")
  }?
att.global.responsibility.attribute.resp =
  
  ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.
  attribute resp {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.global.source.attributes = att.global.source.attribute.source
att.global.source.attribute.source =
  
  ## specifies the source from which some aspect of this element is drawn.
  attribute source {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
sch:pattern [
  id =
    "myTEI-att.global.source-source-only_1_ODD_source-constraint-rule-5"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@source]"
    "\x{a}" ~
    "         "
    sch:let [
      name = "srcs"
      value = "tokenize( normalize-space(@source),' ')"
    ]
    "\x{a}" ~
    "         "
    sch:report [
      test =
        "( self::tei:classRef               | self::tei:dataRef               | self::tei:elementRef               | self::tei:macroRef               | self::tei:moduleRef               | self::tei:schemaSpec )               and               $srcs[2]"
      "\x{a}" ~
      "              When used on a schema description element (like\x{a}" ~
      "              "
      sch:value-of [ select = "name(.)" ]
      "), the @source attribute\x{a}" ~
      "              should have only 1 value. (This one has "
      sch:value-of [ select = "count($srcs)" ]
      ".)\x{a}" ~
      "            "
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
att.global.attributes =
  att.global.linking.attributes,
  att.global.change.attributes,
  att.global.responsibility.attributes,
  att.global.source.attributes,
  att.global.attribute.xmlid,
  att.global.attribute.n
att.global.attribute.xmlid =
  
  ## (identifier) provides a unique identifier for the element bearing the attribute.
  attribute xml:id { xsd:ID }?
att.global.attribute.n =
  
  ## (number) gives a number (or other label) for an element, which is not necessarily unique within the document.
  attribute n { xsd:string }?
att.media.attributes =
  att.media.attribute.width, att.media.attribute.height
att.media.attribute.width =
  
  ## Where the media are displayed, indicates the display width
  attribute width {
    xsd:token {
      pattern =
        "[\-+]?\d+(\.\d+)?(%|cm|mm|in|pt|pc|px|em|ex|ch|rem|vw|vh|vmin|vmax)"
    }
  }?
att.media.attribute.height =
  
  ## Where the media are displayed, indicates the display height
  attribute height {
    xsd:token {
      pattern =
        "[\-+]?\d+(\.\d+)?(%|cm|mm|in|pt|pc|px|em|ex|ch|rem|vw|vh|vmin|vmax)"
    }
  }?
att.resourced.attributes = att.resourced.attribute.url
att.resourced.attribute.url =
  
  ## (uniform resource locator) specifies the URL from which the media concerned may be obtained.
  attribute url {
    xsd:anyURI { pattern = "\S+" }
  }
sch:pattern [
  id = "myTEI-att.measurement-att-measurement-unitRef-constraint-rule-6"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@unitRef]"
    "\x{a}" ~
    "         "
    sch:report [
      test = "@unit"
      role = "info"
      "The @unit attribute may be unnecessary when @unitRef is present."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
att.naming.attribute.role =
  
  ## may be used to specify further information about the entity referenced by this name in the form of a set of whitespace-separated values, for example the occupation of a person, or the status of a place.
  attribute role {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
att.naming.attribute.nymRef =
  
  ## (reference to the canonical name) provides a means of locating the canonical form (nym) of the names associated with the object named by the element bearing it.
  attribute nymRef {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.placement.attributes = att.placement.attribute.place
att.placement.attribute.place =
  
  ## specifies where this item is placed.
  ## Suggested values include: 1] top; 2] bottom; 3] margin; 4] opposite; 5] overleaf; 6] above; 7] right; 8] below; 9] left; 10] end; 11] inline; 12] inspace
  attribute place {
    list {
      (
       ## at the top of the page
       "top"
       | 
         ## at the foot of the page
         "bottom"
       | 
         ## in the margin (left, right, or both)
         "margin"
       | 
         ## on the opposite, i.e. facing, page
         "opposite"
       | 
         ## on the other side of the leaf
         "overleaf"
       | 
         ## above the line
         "above"
       | 
         ## to the right, e.g. to the right of a vertical line of text, or to the right of a figure
         "right"
       | 
         ## below the line
         "below"
       | 
         ## to the left, e.g. to the left of a vertical line of text, or to the left of a figure
         "left"
       | 
         ## at the end of e.g. chapter or volume.
         "end"
       | 
         ## within the body of the text.
         "inline"
       | 
         ## in a predefined space, for example left by an earlier scribe.
         "inspace"
       | xsd:token { pattern = "[^\p{C}\p{Z}]+" })+
    }
  }?
att.typed.attributes =
  att.typed.attribute.type, att.typed.attribute.subtype
att.typed.attribute.type =
  
  ## characterizes the element in some sense, using any convenient classification scheme or typology.
  attribute type {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
att.typed.attribute.subtype =
  
  ## (subtype) provides a sub-categorization of the element, if needed
  attribute subtype {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
sch:pattern [
  id = "myTEI-att.typed-subtypeTyped-constraint-rule-7"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@subtype]"
    "\x{a}" ~
    "         "
    sch:assert [
      test = "@type"
      "The "
      sch:name [ ]
      " element should not be categorized in detail with @subtype unless also categorized in general with @type"
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
att.pointing.attributes = att.pointing.attribute.target
att.pointing.attribute.target =
  
  ## specifies the destination of the reference by supplying one or more URI References
  attribute target {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
sch:pattern [
  id = "myTEI-att.pointing-targetLang-constraint-rule-8"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[not(self::tei:schemaSpec)][@targetLang]"
    "\x{a}" ~
    "         "
    sch:assert [
      test = "@target"
      "@targetLang should only be used on "
      sch:name [ ]
      " if @target is specified."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
model.nameLike.agent = orgName | persName
model.nameLike.agent_alternation = orgName | persName
model.nameLike.agent_sequence = orgName, persName
model.nameLike.agent_sequenceOptional = orgName?, persName?
model.nameLike.agent_sequenceOptionalRepeatable = orgName*, persName*
model.nameLike.agent_sequenceRepeatable = orgName+, persName+
model.segLike = notAllowed
model.segLike_alternation = notAllowed
model.segLike_sequence = empty
model.segLike_sequenceOptional = empty
model.segLike_sequenceOptionalRepeatable = empty
model.segLike_sequenceRepeatable = notAllowed
model.hiLike = hi
model.hiLike_alternation = hi
model.hiLike_sequence = hi
model.hiLike_sequenceOptional = hi?
model.hiLike_sequenceOptionalRepeatable = hi*
model.hiLike_sequenceRepeatable = hi+
model.emphLike = foreign | term | title
model.emphLike_alternation = foreign | term | title
model.emphLike_sequence = foreign, term, title
model.emphLike_sequenceOptional = foreign?, term?, title?
model.emphLike_sequenceOptionalRepeatable = foreign*, term*, title*
model.emphLike_sequenceRepeatable = foreign+, term+, title+
model.highlighted = model.hiLike | model.emphLike
model.highlighted_alternation =
  model.hiLike_alternation | model.emphLike_alternation
model.highlighted_sequence =
  model.hiLike_sequence, model.emphLike_sequence
model.highlighted_sequenceOptional =
  model.hiLike_sequenceOptional?, model.emphLike_sequenceOptional?
model.highlighted_sequenceOptionalRepeatable =
  model.hiLike_sequenceOptionalRepeatable*,
  model.emphLike_sequenceOptionalRepeatable*
model.highlighted_sequenceRepeatable =
  model.hiLike_sequenceRepeatable+, model.emphLike_sequenceRepeatable+
model.dateLike = date
model.dateLike_alternation = date
model.dateLike_sequence = date
model.dateLike_sequenceOptional = date?
model.dateLike_sequenceOptionalRepeatable = date*
model.dateLike_sequenceRepeatable = date+
model.measureLike = measure | dim
model.measureLike_alternation = measure | dim
model.measureLike_sequence = measure, dim
model.measureLike_sequenceOptional = measure?, dim?
model.measureLike_sequenceOptionalRepeatable = measure*, dim*
model.measureLike_sequenceRepeatable = measure+, dim+
model.egLike = notAllowed
model.egLike_alternation = notAllowed
model.egLike_sequence = empty
model.egLike_sequenceOptional = empty
model.egLike_sequenceOptionalRepeatable = empty
model.egLike_sequenceRepeatable = notAllowed
model.graphicLike = graphic
model.graphicLike_alternation = graphic
model.graphicLike_sequence = graphic
model.graphicLike_sequenceOptional = graphic?
model.graphicLike_sequenceOptionalRepeatable = graphic*
model.graphicLike_sequenceRepeatable = graphic+
model.offsetLike = notAllowed
model.offsetLike_alternation = notAllowed
model.offsetLike_sequence = empty
model.offsetLike_sequenceOptional = empty
model.offsetLike_sequenceOptionalRepeatable = empty
model.offsetLike_sequenceRepeatable = notAllowed
model.pPart.msdesc = signatures
model.pPart.msdesc_alternation = signatures
model.pPart.msdesc_sequence = signatures
model.pPart.msdesc_sequenceOptional = signatures?
model.pPart.msdesc_sequenceOptionalRepeatable = signatures*
model.pPart.msdesc_sequenceRepeatable = signatures+
model.pPart.editorial = choice
model.pPart.editorial_alternation = choice
model.pPart.editorial_sequence = choice
model.pPart.editorial_sequenceOptional = choice?
model.pPart.editorial_sequenceOptionalRepeatable = choice*
model.pPart.editorial_sequenceRepeatable = choice+
model.pPart.transcriptional = sic | reg | orig
model.pPart.transcriptional_alternation = sic | reg | orig
model.pPart.transcriptional_sequence = sic, reg, orig
model.pPart.transcriptional_sequenceOptional = sic?, reg?, orig?
model.pPart.transcriptional_sequenceOptionalRepeatable =
  sic*, reg*, orig*
model.pPart.transcriptional_sequenceRepeatable = sic+, reg+, orig+
model.pPart.edit = model.pPart.editorial | model.pPart.transcriptional
model.pPart.edit_alternation =
  model.pPart.editorial_alternation
  | model.pPart.transcriptional_alternation
model.pPart.edit_sequence =
  model.pPart.editorial_sequence, model.pPart.transcriptional_sequence
model.pPart.edit_sequenceOptional =
  model.pPart.editorial_sequenceOptional?,
  model.pPart.transcriptional_sequenceOptional?
model.pPart.edit_sequenceOptionalRepeatable =
  model.pPart.editorial_sequenceOptionalRepeatable*,
  model.pPart.transcriptional_sequenceOptionalRepeatable*
model.pPart.edit_sequenceRepeatable =
  model.pPart.editorial_sequenceRepeatable+,
  model.pPart.transcriptional_sequenceRepeatable+
model.linePart = model.hiLike | choice | zone | path | line
model.ptrLike = ptr | ref
model.ptrLike_alternation = ptr | ref
model.ptrLike_sequence = ptr, ref
model.ptrLike_sequenceOptional = ptr?, ref?
model.ptrLike_sequenceOptionalRepeatable = ptr*, ref*
model.ptrLike_sequenceRepeatable = ptr+, ref+
model.lPart = notAllowed
model.lPart_alternation = notAllowed
model.lPart_sequence = empty
model.lPart_sequenceOptional = empty
model.lPart_sequenceOptionalRepeatable = empty
model.lPart_sequenceRepeatable = notAllowed
model.global.meta = notAllowed
model.global.meta_alternation = notAllowed
model.global.meta_sequence = empty
model.global.meta_sequenceOptional = empty
model.global.meta_sequenceOptionalRepeatable = empty
model.global.meta_sequenceRepeatable = notAllowed
model.milestoneLike = pb | lb | fw
model.milestoneLike_alternation = pb | lb | fw
model.milestoneLike_sequence = pb, lb, fw
model.milestoneLike_sequenceOptional = pb?, lb?, fw?
model.milestoneLike_sequenceOptionalRepeatable = pb*, lb*, fw*
model.milestoneLike_sequenceRepeatable = pb+, lb+, fw+
model.gLike = notAllowed
model.oddDecl = notAllowed
model.oddDecl_alternation = notAllowed
model.oddDecl_sequence = empty
model.oddDecl_sequenceOptional = empty
model.oddDecl_sequenceOptionalRepeatable = empty
model.oddDecl_sequenceRepeatable = notAllowed
model.phrase.xml = notAllowed
model.phrase.xml_alternation = notAllowed
model.phrase.xml_sequence = empty
model.phrase.xml_sequenceOptional = empty
model.phrase.xml_sequenceOptionalRepeatable = empty
model.phrase.xml_sequenceRepeatable = notAllowed
model.specDescLike = notAllowed
model.specDescLike_alternation = notAllowed
model.specDescLike_sequence = empty
model.specDescLike_sequenceOptional = empty
model.specDescLike_sequenceOptionalRepeatable = empty
model.specDescLike_sequenceRepeatable = notAllowed
model.biblLike = bibl | biblStruct | listBibl | msDesc
model.biblLike_alternation = bibl | biblStruct | listBibl | msDesc
model.biblLike_sequence = bibl, biblStruct, listBibl, msDesc
model.biblLike_sequenceOptional = bibl?, biblStruct?, listBibl?, msDesc?
model.biblLike_sequenceOptionalRepeatable =
  bibl*, biblStruct*, listBibl*, msDesc*
model.biblLike_sequenceRepeatable =
  bibl+, biblStruct+, listBibl+, msDesc+
model.headLike = head
model.headLike_alternation = head
model.headLike_sequence = head
model.headLike_sequenceOptional = head?
model.headLike_sequenceOptionalRepeatable = head*
model.headLike_sequenceRepeatable = head+
model.labelLike = label
model.labelLike_alternation = label
model.labelLike_sequence = label
model.labelLike_sequenceOptional = label?
model.labelLike_sequenceOptionalRepeatable = label*
model.labelLike_sequenceRepeatable = label+
model.listLike = notAllowed
model.listLike_alternation = notAllowed
model.listLike_sequence = empty
model.listLike_sequenceOptional = empty
model.listLike_sequenceOptionalRepeatable = empty
model.listLike_sequenceRepeatable = notAllowed
model.noteLike = note
model.noteLike_alternation = note
model.noteLike_sequence = note
model.noteLike_sequenceOptional = note?
model.noteLike_sequenceOptionalRepeatable = note*
model.noteLike_sequenceRepeatable = note+
model.lLike = l
model.lLike_alternation = l
model.lLike_sequence = l
model.lLike_sequenceOptional = l?
model.lLike_sequenceOptionalRepeatable = l*
model.lLike_sequenceRepeatable = l+
model.pLike = p | ab
model.pLike_alternation = p | ab
model.pLike_sequence = p, ab
model.pLike_sequenceOptional = p?, ab?
model.pLike_sequenceOptionalRepeatable = p*, ab*
model.pLike_sequenceRepeatable = p+, ab+
model.stageLike = stage
model.stageLike_alternation = stage
model.stageLike_sequence = stage
model.stageLike_sequenceOptional = stage?
model.stageLike_sequenceOptionalRepeatable = stage*
model.stageLike_sequenceRepeatable = stage+
model.global.edit = notAllowed
model.global.edit_alternation = notAllowed
model.global.edit_sequence = empty
model.global.edit_sequenceOptional = empty
model.global.edit_sequenceOptionalRepeatable = empty
model.global.edit_sequenceRepeatable = notAllowed
model.divPart = model.lLike | model.pLike | lg | sp
model.placeNamePart = country | settlement
model.placeNamePart_alternation = country | settlement
model.placeNamePart_sequence = country, settlement
model.placeNamePart_sequenceOptional = country?, settlement?
model.placeNamePart_sequenceOptionalRepeatable = country*, settlement*
model.placeNamePart_sequenceRepeatable = country+, settlement+
model.placeStateLike = model.placeNamePart
model.placeStateLike_alternation = model.placeNamePart_alternation
model.placeStateLike_sequence = model.placeNamePart_sequence
model.placeStateLike_sequenceOptional =
  model.placeNamePart_sequenceOptional?
model.placeStateLike_sequenceOptionalRepeatable =
  model.placeNamePart_sequenceOptionalRepeatable*
model.placeStateLike_sequenceRepeatable =
  model.placeNamePart_sequenceRepeatable+
model.availabilityPart = licence
model.descLike = notAllowed
model.quoteLike = notAllowed
model.quoteLike_alternation = notAllowed
model.quoteLike_sequence = empty
model.quoteLike_sequenceOptional = empty
model.quoteLike_sequenceOptionalRepeatable = empty
model.quoteLike_sequenceRepeatable = notAllowed
model.attributable = model.quoteLike
model.attributable_alternation = model.quoteLike_alternation
model.attributable_sequence = model.quoteLike_sequence
model.attributable_sequenceOptional = model.quoteLike_sequenceOptional?
model.attributable_sequenceOptionalRepeatable =
  model.quoteLike_sequenceOptionalRepeatable*
model.attributable_sequenceRepeatable =
  model.quoteLike_sequenceRepeatable+
model.respLike = author | respStmt
model.divWrapper = notAllowed
model.divTopPart = model.headLike
model.divTop = model.divWrapper | model.divTopPart
model.divBottomPart = notAllowed
model.divBottom = model.divWrapper | model.divBottomPart
model.choicePart = sic | reg | orig
model.imprintPart = publisher | pubPlace
model.addressLike = address
model.addressLike_alternation = address
model.addressLike_sequence = address
model.addressLike_sequenceOptional = address?
model.addressLike_sequenceOptionalRepeatable = address*
model.addressLike_sequenceRepeatable = address+
model.nameLike =
  model.nameLike.agent
  | model.offsetLike
  | model.placeStateLike
  | idno
  | model.persNamePart
model.nameLike_alternation =
  model.nameLike.agent_alternation
  | model.offsetLike_alternation
  | model.placeStateLike_alternation
  | idno
  | model.persNamePart_alternation
model.nameLike_sequence =
  model.nameLike.agent_sequence,
  model.offsetLike_sequence,
  model.placeStateLike_sequence,
  idno,
  model.persNamePart_sequence
model.nameLike_sequenceOptional =
  model.nameLike.agent_sequenceOptional?,
  model.offsetLike_sequenceOptional?,
  model.placeStateLike_sequenceOptional?,
  idno?,
  model.persNamePart_sequenceOptional?
model.nameLike_sequenceOptionalRepeatable =
  model.nameLike.agent_sequenceOptionalRepeatable*,
  model.offsetLike_sequenceOptionalRepeatable*,
  model.placeStateLike_sequenceOptionalRepeatable*,
  idno*,
  model.persNamePart_sequenceOptionalRepeatable*
model.nameLike_sequenceRepeatable =
  model.nameLike.agent_sequenceRepeatable+,
  model.offsetLike_sequenceRepeatable+,
  model.placeStateLike_sequenceRepeatable+,
  idno+,
  model.persNamePart_sequenceRepeatable+
model.global =
  model.global.meta
  | model.milestoneLike
  | model.noteLike
  | model.global.edit
model.biblPart =
  model.respLike
  | model.imprintPart
  | bibl
  | relatedItem
  | extent
  | availability
  | msIdentifier
model.addrPart = model.nameLike | addrLine
model.pPart.data =
  model.dateLike
  | model.measureLike
  | model.addressLike
  | model.nameLike
model.pPart.data_alternation =
  model.dateLike_alternation
  | model.measureLike_alternation
  | model.addressLike_alternation
  | model.nameLike_alternation
model.pPart.data_sequence =
  model.dateLike_sequence,
  model.measureLike_sequence,
  model.addressLike_sequence,
  model.nameLike_sequence
model.pPart.data_sequenceOptional =
  model.dateLike_sequenceOptional?,
  model.measureLike_sequenceOptional?,
  model.addressLike_sequenceOptional?,
  model.nameLike_sequenceOptional?
model.pPart.data_sequenceOptionalRepeatable =
  model.dateLike_sequenceOptionalRepeatable*,
  model.measureLike_sequenceOptionalRepeatable*,
  model.addressLike_sequenceOptionalRepeatable*,
  model.nameLike_sequenceOptionalRepeatable*
model.pPart.data_sequenceRepeatable =
  model.dateLike_sequenceRepeatable+,
  model.measureLike_sequenceRepeatable+,
  model.addressLike_sequenceRepeatable+,
  model.nameLike_sequenceRepeatable+
model.inter =
  model.egLike
  | model.oddDecl
  | model.biblLike
  | model.labelLike
  | model.listLike
  | model.stageLike
  | model.attributable
model.cmc = notAllowed
model.common = model.divPart | model.inter | model.cmc
model.phrase =
  model.segLike
  | model.highlighted
  | model.graphicLike
  | model.pPart.msdesc
  | model.pPart.edit
  | model.ptrLike
  | model.lPart
  | model.phrase.xml
  | model.specDescLike
  | model.pPart.data
model.paraPart =
  model.gLike
  | model.lLike
  | model.global
  | model.inter
  | model.phrase
  | lg
model.limitedPhrase =
  model.hiLike
  | model.emphLike
  | model.pPart.msdesc
  | model.pPart.editorial
  | model.ptrLike
  | model.phrase.xml
  | model.pPart.data
model.divLike = \div
model.divGenLike = notAllowed
model.div1Like = notAllowed
model.applicationLike = application
model.sourceDescPart = notAllowed
model.editorialDeclPart = correction | normalization | hyphenation
model.resource = \text | sourceDoc
att.personal.attribute.sort =
  
  ## (sort) specifies the sort order of the name component in relation to others within the name.
  attribute sort { xsd:nonNegativeInteger }?
att.calendarSystem.attributes = att.calendarSystem.attribute.calendar
att.calendarSystem.attribute.calendar =
  
  ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
  attribute calendar {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
sch:pattern [
  id =
    "myTEI-att.calendarSystem-calendar-calendar_attr_on_empty_element-constraint-rule-9"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@calendar]"
    "\x{a}" ~
    "         "
    sch:assert [
      test = "string-length( normalize-space(.) ) gt 0"
      " @calendar indicates one or more\x{a}" ~
      "              systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
      "              but this "
      sch:name [ ]
      " element has no textual content."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
p =
  
  ## (paragraph) marks paragraphs in prose. [3.1. Paragraphs 7.2.5. Speech Contents]
  element p {
    macro.paraContent
    >> sch:pattern [
         id =
           "myTEI-p-abstractModel-structure-p-in-ab-or-p-constraint-rule-10"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:p"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "(ancestor::tei:ab or ancestor::tei:p) and                        not( ancestor::tei:floatingText                           | parent::tei:exemplum                           | parent::tei:item                           | parent::tei:note                           | parent::tei:q                           | parent::tei:quote                           | parent::tei:remarks                           | parent::tei:said                           | parent::tei:sp                           | parent::tei:stage                           | parent::tei:cell                           | parent::tei:figure )"
             "\x{a}" ~
             "          Abstract model violation: Paragraphs may not occur inside other paragraphs or ab elements.\x{a}" ~
             "        "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "myTEI-p-abstractModel-structure-p-in-l-or-lg-constraint-rule-11"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:p"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "( ancestor::tei:l  or  ancestor::tei:lg ) and                        not( ancestor::tei:floatingText                           | parent::tei:figure                           | parent::tei:note )"
             "\x{a}" ~
             "          Abstract model violation: Lines may not contain higher-level structural elements such as div, p, or ab, unless p is a child of figure or note, or is a descendant of floatingText.\x{a}" ~
             "        "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.cmc.attributes,
    empty
  }
foreign =
  
  ## (foreign) identifies a word or phrase as belonging to some language other than that of the surrounding text. [3.3.2.1. Foreign Words or Expressions]
  element foreign {
    macro.phraseSeq,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.cmc.attributes,
    empty
  }
hi =
  
  ## (highlighted) marks a word or phrase as graphically distinct from the surrounding text, for reasons concerning which no claim is made. [3.3.2.2. Emphatic Words and Phrases 3.3.2. Emphasis, Foreign Words, and Unusual Language]
  element hi {
    macro.paraContent,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.cmc.attributes,
    empty
  }
term =
  
  ## (term) contains a single-word, multi-word, or symbolic designation which is regarded as a technical term. [3.4.1. Terms and Glosses]
  element term {
    macro.phraseSeq,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.cmc.attributes,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "genre"
      | 
        ##
        "form"
      | 
        ##
        "segmentation_quality"
      | 
        ##
        "transcription_quality"
      | 
        ##
        "intermediary_reg_quality"
      | 
        ##
        "advanced_reg_quality"
      | 
        ##
        "ling_annotation"
      | 
        ##
        "ling_annotation_quality"
    }?,
    empty
  }
sic =
  
  ## (Latin for thus or so) contains text reproduced although apparently incorrect or inaccurate. [3.5.1. Apparent Errors]
  element sic {
    macro.paraContent,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.cmc.attributes,
    empty
  }
choice =
  
  ## (choice) groups a number of alternative encodings for the same point in a text. [3.5. Simple Editorial Changes]
  element choice {
    (model.choicePart | choice),
    (model.choicePart | choice),
    (model.choicePart | choice)*,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.cmc.attributes,
    empty
  }
reg =
  
  ## (regularization) contains a reading which has been regularized or normalized in some sense. [3.5.2. Regularization and
  ## Normalization 13. Critical Apparatus]
  element reg {
    macro.paraContent,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.cmc.attributes,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "intermediary"
      | 
        ##
        "advanced"
    }?,
    empty
  }
orig =
  
  ## (original form) contains a reading which is marked as following the original, rather than being normalized or corrected. [3.5.2. Regularization and
  ## Normalization 13. Critical Apparatus]
  element orig {
    macro.paraContent,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.cmc.attributes,
    empty
  }
address =
  
  ## (address) contains a postal address, for example of a publisher, an organization, or an individual. [3.6.2. Addresses 2.2.4. Publication, Distribution, Licensing, etc. 3.12.2.4. Imprint, Size of a Document, and Reprint Information]
  element address {
    (model.global*, (model.addrPart, model.global*)+),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.cmc.attributes,
    empty
  }
addrLine =
  
  ## (address line) contains one line of a postal address. [3.6.2. Addresses 2.2.4. Publication, Distribution, Licensing, etc. 3.12.2.4. Imprint, Size of a Document, and Reprint Information]
  element addrLine {
    macro.phraseSeq,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
measure =
  
  ## (measure) contains a word or phrase referring to some quantity of an object or commodity, usually comprising a number, a unit, and a commodity name. [3.6.3. Numbers and
  ## Measures]
  element measure {
    macro.phraseSeq,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.cmc.attributes,
    
    ## (unit) indicates the units used for the measurement, usually using the standard symbol for the desired units.
    attribute unit {
      
      ##
      "total_images"
      | 
        ##
        "processed_images"
    }?,
    empty
  }
date =
  
  ## (date) contains a date in any format. [3.6.4. Dates and Times 2.2.4. Publication, Distribution, Licensing, etc. 2.6. The Revision Description 3.12.2.4. Imprint, Size of a Document, and Reprint Information 16.2.3. The Setting Description 14.4. Dates]
  element date {
    (text | model.gLike | model.phrase | model.global)*,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.canonical.attributes,
    att.datable.attributes,
    att.calendarSystem.attributes,
    att.dimensions.attribute.extent,
    att.typed.attribute.type,
    att.cmc.attributes,
    
    ## (certainty) signifies the degree of certainty associated with the intervention or interpretation.
    attribute cert {
      
      ##
      "high"
      | 
        ##
        "medium"
      | 
        ##
        "low"
      | 
        ##
        "unknown"
    }?,
    empty
  }
ptr =
  
  ## (pointer) defines a pointer to another location. [3.7. Simple Links and Cross-References 17.1. Links]
  element ptr {
    empty
    >> sch:pattern [
         id = "myTEI-ptr-ptrAtts-constraint-rule-12"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ptr"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @cRef"
             "Only one of the attributes @target and @cRef may be supplied on "
             sch:name [ ]
             "."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.pointing.attributes,
    att.cmc.attributes,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "orcid"
    }?,
    empty
  }
ref =
  
  ## (reference) defines a reference to another location, possibly modified by additional text or comment. [3.7. Simple Links and Cross-References 17.1. Links]
  element ref {
    macro.paraContent
    >> sch:pattern [
         id = "myTEI-ref-refAtts-constraint-rule-13"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ref"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @cRef"
             "Only one of the attributes @target' and @cRef' may be supplied on "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.pointing.attributes,
    att.typed.attribute.type,
    att.cmc.attributes,
    empty
  }
label =
  
  ## (label) contains any label or heading used to identify part of a text, typically but not exclusively in a list or glossary. [3.8. Lists]
  element label {
    macro.phraseSeq,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.placement.attributes,
    att.cmc.attributes,
    empty
  }
head =
  
  ## (heading) contains any type of heading, for example the title of a section, or the heading of a list, glossary, manuscript description, etc. [4.2.1. Headings and Trailers]
  element head {
    (text
     | lg
     | model.gLike
     | model.phrase
     | model.inter
     | model.lLike
     | model.global)*,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.typed.attribute.type,
    att.placement.attributes,
    att.cmc.attributes,
    empty
  }
note =
  
  ## (note) contains a note or annotation. [3.9.1. Notes and Simple Annotation 2.2.6. The Notes Statement 3.12.2.8. Notes and Statement of Language 10.3.5.4. Notes within Entries]
  element note {
    macro.specialPara,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.linking.attribute.corresp,
    att.global.change.attribute.change,
    att.global.responsibility.attribute.resp,
    att.cmc.attributes,
    
    ## specifies where this item is placed.
    attribute place {
      list {
        (
         ##
         "margin")+
      }
    }?,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "MarginTextZone"
      | 
        ##
        "MarginTextZone:handwrittenAddition"
      | 
        ##
        "TableZone"
    }?,
    empty
  }
graphic =
  
  ## (graphic) indicates the location of a graphic or illustration, either forming part of a text, or providing an image of it. [3.10. Graphics and Other Non-textual Components 12.1. Digital Facsimiles]
  element graphic {
    model.descLike*,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.media.attributes,
    att.resourced.attributes,
    att.typed.attributes,
    att.cmc.attributes,
    empty
  }
pb =
  
  ## (page beginning) marks the beginning of a new page in a paginated document. [3.11.3. Milestone
  ## Elements]
  element pb {
    empty,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.linking.attribute.corresp,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.cmc.attributes,
    empty
  }
lb =
  
  ## (line beginning) marks the beginning of a new (typographic) line in some edition or version of a text. [3.11.3. Milestone
  ## Elements 7.2.5. Speech Contents]
  element lb {
    empty,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.linking.attribute.corresp,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.typed.attribute.type,
    att.cmc.attributes,
    empty
  }
monogr =
  
  ## (monographic level) contains bibliographic elements describing an item (e.g. a book or journal) published as an independent item (i.e. as a separate physical object). [3.12.2.1. Analytic, Monographic, and Series Levels]
  element monogr {
    ((((author | respStmt),
       (author | respStmt)*,
       title+,
       (model.ptrLike | idno | respStmt)*)
      | ((title | model.ptrLike | idno)+, (author | respStmt)*)
      | (authority, idno))?,
     availability*,
     model.noteLike*,
     (idno | model.ptrLike | respStmt)*,
     imprint,
     (imprint | extent)*),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
author =
  
  ## (author) in a bibliographic reference, contains the name(s) of an author, personal or corporate, of a work; for example in the same form as that provided by a recognized bibliographic name authority. [3.12.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement]
  element author {
    macro.phraseSeq
    >> sch:pattern [
         id = "myTEI-author-calendar-check-author-constraint-rule-14"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.naming.attribute.role,
    att.naming.attribute.nymRef,
    att.datable.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-author-calendar-calendar-check-author-constraint-rule-15"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
respStmt =
  
  ## (statement of responsibility) supplies a statement of responsibility for the intellectual content of a text, edition, recording, or series, where the specialized elements for authors, editors, etc. do not suffice or do not apply. May also be used to encode information about individuals or organizations which have played a role in the production or distribution of a bibliographic work. [3.12.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.2. The Edition Statement 2.2.5. The Series Statement]
  element respStmt {
    (((resp+, model.nameLike.agent+) | (model.nameLike.agent+, resp+)),
     note*),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
resp =
  
  ## (responsibility) contains a phrase describing the nature of a person's intellectual responsibility, or an organization's role in the production or distribution of a work. [3.12.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.2. The Edition Statement 2.2.5. The Series Statement]
  element resp {
    macro.phraseSeq.limited
    >> sch:pattern [
         id = "myTEI-resp-calendar-check-resp-constraint-rule-16"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.datable.w3c.attribute.when,
    att.datable.w3c.attribute.from,
    att.datable.w3c.attribute.to,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-resp-calendar-calendar-check-resp-constraint-rule-17"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
title =
  
  ## (title) contains a title for any kind of work. [3.12.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.5. The Series Statement]
  element title {
    macro.paraContent
    >> sch:pattern [
         id = "myTEI-title-calendar-check-title-constraint-rule-18"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.canonical.attribute.ref,
    att.datable.attributes,
    att.cmc.attributes,
    
    ## classifies the title according to some convenient typology.
    attribute type {
      
      ##
      "complete_title"
      | 
        ##
        "short_title"
    }?,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-title-calendar-calendar-check-title-constraint-rule-19"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
imprint =
  
  ## groups information relating to the publication or distribution of a bibliographic item. [3.12.2.4. Imprint, Size of a Document, and Reprint Information]
  element imprint {
    (empty*,
     ((model.imprintPart | model.dateLike), respStmt*, model.global*)+),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
publisher =
  
  ## (publisher) provides the name of the organization responsible for the publication or distribution of a bibliographic item. [3.12.2.4. Imprint, Size of a Document, and Reprint Information 2.2.4. Publication, Distribution, Licensing, etc.]
  element publisher {
    macro.phraseSeq
    >> sch:pattern [
         id = "myTEI-publisher-publisher_check-constraint-rule-20"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:publisher"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "contains(.,'Projet SETAF')"
             'The publisher is "Projet SETAF"'
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.canonical.attributes,
    empty
  }
pubPlace =
  
  ## (publication place) contains the name of the place where a bibliographic item was published. [3.12.2.4. Imprint, Size of a Document, and Reprint Information]
  element pubPlace {
    macro.phraseSeq,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.naming.attribute.nymRef,
    att.canonical.attribute.key,
    att.canonical.attribute.ref,
    
    ## (certainty) signifies the degree of certainty associated with the intervention or interpretation.
    attribute cert {
      
      ##
      "high"
      | 
        ##
        "medium"
      | 
        ##
        "low"
      | 
        ##
        "unknown"
    }?,
    
    ## may be used to specify further information about the entity referenced by this name in the form of a set of whitespace-separated values, for example the occupation of a person, or the status of a place.
    attribute role {
      list {
        (
         ##
         "presumed_address"
         | 
           ##
           "false_address")+
      }
    }?,
    empty
  }
bibl =
  
  ## (bibliographic citation) contains a loosely-structured bibliographic citation of which the sub-components may or may not be explicitly tagged. [3.12.1. Methods of Encoding Bibliographic References and Lists of References 2.2.7. The Source Description 16.3.2. Declarable Elements]
  element bibl {
    (text
     | model.gLike
     | model.highlighted
     | model.pPart.data
     | model.pPart.edit
     | model.segLike
     | model.ptrLike
     | model.biblPart
     | model.global)*,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.cmc.attributes,
    empty
  }
biblStruct =
  
  ## (structured bibliographic citation) contains a structured bibliographic citation, in which only bibliographic sub-elements appear and in a specified order. [3.12.1. Methods of Encoding Bibliographic References and Lists of References 2.2.7. The Source Description 16.3.2. Declarable Elements]
  element biblStruct {
    (monogr+, (model.noteLike | model.ptrLike | relatedItem)*),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.cmc.attributes,
    empty
  }
listBibl =
  
  ## (citation list) contains a list of bibliographic citations of any kind. [3.12.1. Methods of Encoding Bibliographic References and Lists of References 2.2.7. The Source Description 16.3.2. Declarable Elements]
  element listBibl {
    (model.headLike*,
     (model.milestoneLike)*,
     (model.biblLike+, (model.milestoneLike)*)+),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.typed.attribute.type,
    att.cmc.attributes,
    empty
  }
relatedItem =
  
  ## contains or references some other bibliographic item which is related to the present one in some specified manner, for example as a constituent or alternative version of it. [3.12.2.7. Related Items]
  element relatedItem {
    ((model.biblLike | model.ptrLike)?)
    >> sch:pattern [
         id = "myTEI-relatedItem-targetorcontent1-constraint-rule-21"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:relatedItem"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and count( child::* ) > 0"
             "If the @target attribute on "
             sch:name [ ]
             " is used, the relatedItem element must be empty"
           ]
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@target or child::*"
             "A relatedItem element should have either a @target attribute or a child element to indicate the related bibliographic item"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.typed.attribute.subtype,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "original"
    }?,
    
    ## points to the related bibliographic element by means of an absolute or relative URI reference
    attribute target {
      xsd:anyURI { pattern = "\S+" }
    }?,
    empty
  }
l =
  
  ## (verse line) contains a single, possibly incomplete, line of verse. [3.13.1. Core Tags for Verse 3.13. Passages of Verse or Drama 7.2.5. Speech Contents]
  element l {
    ((text | model.gLike | model.phrase | model.inter | model.global)*)
    >> sch:pattern [
         id =
           "myTEI-l-abstractModel-structure-l-in-l-constraint-rule-22"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:l"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:l[not(.//tei:note//tei:l[. = current()])]"
             "Abstract model violation: Lines may not contain lines or lg elements."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.cmc.attributes,
    empty
  }
lg =
  
  ## (line group) contains one or more verse lines functioning as a formal unit, e.g. a stanza, refrain, verse paragraph, etc. [3.13.1. Core Tags for Verse 3.13. Passages of Verse or Drama 7.2.5. Speech Contents]
  element lg {
    ((model.divTop | model.global)*,
     (model.lLike
      | model.stageLike
      | model.labelLike
      | model.pPart.transcriptional
      | lg),
     (model.lLike
      | model.stageLike
      | model.labelLike
      | model.pPart.transcriptional
      | model.global
      | lg)*,
     (model.divBottom, model.global*)*)
    >> sch:pattern [
         id = "myTEI-lg-atleast1oflggapl-constraint-rule-23"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:lg"
           "\x{a}" ~
           "               "
           sch:assert [
             test =
               "count(descendant::tei:lg|descendant::tei:l|descendant::tei:gap) > 0"
             "An lg element must contain at least one child l, lg, or gap element."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "myTEI-lg-abstractModel-structure-lg-in-l-constraint-rule-24"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:lg"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:l[not(.//tei:note//tei:lg[. = current()])]"
             "Abstract model violation: Lines may not contain line groups."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.typed.attributes,
    att.cmc.attributes,
    empty
  }
sp =
  
  ## (speech) contains an individual speech in a performance text, or a passage presented as such in a prose or verse text. [3.13.2. Core Tags for Drama 3.13. Passages of Verse or Drama 7.2.2. Speeches and Speakers]
  element sp {
    (model.global*,
     (speaker, model.global*)?,
     ((lg
       | model.lLike
       | model.pLike
       | model.listLike
       | model.stageLike
       | model.attributable),
      (model.global*))+),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
speaker =
  
  ## contains a specialized form of heading or label, giving the name of one or more speakers in a dramatic text or fragment. [3.13.2. Core Tags for Drama]
  element speaker {
    macro.phraseSeq,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
stage =
  
  ## (stage direction) contains any kind of stage direction within a dramatic text or fragment. [3.13.2. Core Tags for Drama 3.13. Passages of Verse or Drama 7.2.4. Stage Directions]
  element stage {
    macro.specialPara,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.placement.attributes,
    att.cmc.attributes,
    empty
  }
teiHeader =
  
  ## (TEI header) supplies descriptive and declarative metadata associated with a digital resource or set of resources. [2.1.1. The TEI Header and Its Components 16.1. Varieties of Composite Text]
  element teiHeader {
    (fileDesc, encodingDesc, profileDesc, revisionDesc),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
fileDesc =
  
  ## (file description) contains a full bibliographic description of an electronic file. [2.2. The File Description 2.1.1. The TEI Header and Its Components]
  element fileDesc {
    (titleStmt, extent, publicationStmt, sourceDesc),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
titleStmt =
  
  ## (title statement) groups information about the title of a work and those responsible for its content. [2.2.1. The Title Statement 2.2. The File Description]
  element titleStmt {
    (title+, model.respLike*),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
extent =
  
  ## (extent) describes the approximate size of a text stored on some carrier medium or of some other object, digital or non-digital, specified in any convenient units. [2.2.3. Type and Extent of File 2.2. The File Description 3.12.2.4. Imprint, Size of a Document, and Reprint Information 11.7.1. Object Description]
  element extent {
    macro.phraseSeq,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
publicationStmt =
  
  ## (publication statement) groups information concerning the publication or distribution of an electronic or other text. [2.2.4. Publication, Distribution, Licensing, etc. 2.2. The File Description]
  element publicationStmt {
    (publisher, authority, address, availability, date),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
authority =
  
  ## (release authority) supplies the name of a person or other agency responsible for making a work available, other than a publisher or distributor. [2.2.4. Publication, Distribution, Licensing, etc.]
  element authority {
    macro.phraseSeq.limited
    >> sch:pattern [
         id = "myTEI-authority-authority_check-constraint-rule-25"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:authority"
           "\x{a}" ~
           "               "
           sch:assert [
             test =
               "contains(.,'Institut Histoire de la RÃ©formation (IHR), universitÃ© de GenÃ¨ve')"
             '''The authority is "Institut d'Histoire de la RÃ©formation (IHR), universitÃ© de GenÃ¨ve"'''
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.linking.attribute.corresp,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.canonical.attributes,
    empty
  }
idno =
  
  ## (identifier) supplies any form of identifier used to identify some object, such as a bibliographic item, a person, a title, an organization, etc. in a standardized way. [14.3.1. Basic Principles 2.2.4. Publication, Distribution, Licensing, etc. 2.2.5. The Series Statement 3.12.2.4. Imprint, Size of a Document, and Reprint Information]
  element idno {
    ((text | model.gLike | idno)*)
    >> sch:pattern [
         id = "myTEI-idno-calendar-check-idno-constraint-rule-26"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.datable.attributes,
    att.typed.attribute.subtype,
    att.cmc.attributes,
    
    ## categorizes the identifier, for example as an ISBN, Social Security number, etc.
    attribute type {
      
      ##
      "shelfmark"
    }?,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-idno-calendar-calendar-check-idno-constraint-rule-27"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
availability =
  
  ## (availability) supplies information about the availability of a text, for example any restrictions on its use or distribution, its copyright status, any licence applying to it, etc. [2.2.4. Publication, Distribution, Licensing, etc.]
  element availability {
    (model.availabilityPart | model.pLike)+,
    att.global.attribute.xmlid,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    
    ## (number) gives a number (or other label) for an element, which is not necessarily unique within the document.
    attribute n {
      
      ##
      "CC-BY"
    }?,
    
    ## (status) supplies a code identifying the current availability of the text.
    attribute status {
      
      ##
      "restricted"
    }?,
    empty
  }
licence =
  
  ## contains information about a licence or other legal agreement applicable to the text. [2.2.4. Publication, Distribution, Licensing, etc.]
  element licence {
    macro.specialPara
    >> sch:pattern [
         id = "myTEI-licence-calendar-check-licence-constraint-rule-28"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.pointing.attributes,
    att.datable.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-licence-calendar-calendar-check-licence-constraint-rule-29"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
sourceDesc =
  
  ## (source description) describes the source(s) from which an electronic text was derived or generated, typically a bibliographic description in the case of a digitized text, or a phrase such as born digital for a text which has no previous existence. [2.2.7. The Source Description]
  element sourceDesc {
    (model.pLike+
     | (model.biblLike | model.sourceDescPart | model.listLike)+),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
encodingDesc =
  
  ## (encoding description) documents the relationship between an electronic text and the source or sources from which it was derived. [2.3. The Encoding Description 2.1.1. The TEI Header and Its Components]
  element encodingDesc {
    (projectDesc,
     editorialDecl,
     (appInfo,
      (appInfo, (appInfo, appInfo?)?)?),
     classDecl),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
projectDesc =
  
  ## (project description) describes in detail the aim or purpose for which an electronic file was encoded, together with any other relevant information concerning the process by which it was assembled or collected. [2.3.1. The Project Description 2.3. The Encoding Description 16.3.2. Declarable Elements]
  element projectDesc {
    model.pLike+,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
editorialDecl =
  
  ## (editorial practice declaration) provides details of editorial principles and practices applied during the encoding of a text. [2.3.3. The Editorial Practices Declaration 2.3. The Encoding Description 16.3.2. Declarable Elements]
  element editorialDecl {
    (model.pLike | model.editorialDeclPart)+,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
correction =
  
  ## (correction principles) states how and under what circumstances corrections have been made in the text. [2.3.3. The Editorial Practices Declaration 16.3.2. Declarable Elements]
  element correction {
    model.pLike+,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
normalization =
  
  ## (normalization) indicates the extent of normalization or regularization of the original source carried out in converting it to electronic form. [2.3.3. The Editorial Practices Declaration 16.3.2. Declarable Elements]
  element normalization {
    model.pLike+,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    empty
  }
hyphenation =
  
  ## (hyphenation) summarizes the way in which hyphenation in a source text has been treated in an encoded version of it. [2.3.3. The Editorial Practices Declaration 16.3.2. Declarable Elements]
  element hyphenation {
    model.pLike+,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    
    ## (end-of-line) indicates whether or not end-of-line hyphenation has been retained in a text.
    [ a:defaultValue = "some" ]
    attribute eol {
      
      ## all end-of-line hyphenation has been retained, even though the lineation of the original may not have been.
      "all"
      | 
        ## end-of-line hyphenation has been retained in some cases.
        "some"
      | 
        ## all soft end-of-line hyphenation has been removed: any remaining end-of-line hyphenation should be retained.
        "hard"
      | 
        ## all end-of-line hyphenation has been removed: any remaining hyphenation occurred within the line.
        "none"
    }?,
    empty
  }
classDecl =
  
  ## (classification declarations) contains one or more taxonomies defining any classificatory codes used elsewhere in the text. [2.3.7. The Classification Declaration 2.3. The Encoding Description]
  element classDecl {
    taxonomy+,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
taxonomy =
  
  ## (taxonomy) defines a typology either implicitly, by means of a bibliographic citation, or explicitly by a structured taxonomy. [2.3.7. The Classification Declaration]
  element taxonomy {
    (((category | taxonomy)+
      | ((model.descLike)+, (category | taxonomy)*))
     | (model.biblLike, (category | taxonomy)*)),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    empty
  }
category =
  
  ## (category) contains an individual descriptive category, possibly nested within a superordinate category, within a user-defined taxonomy. [2.3.7. The Classification Declaration]
  element category {
    (((model.descLike)*),
     category*),
    att.global.attribute.n,
    att.global.change.attribute.change,
    
    ## (identifier) provides a unique identifier for the element bearing the attribute.
    attribute xml:id {
      
      ##
      "SegmOntoZones"
      | 
        ##
        "SegmOntoLines"
    }?,
    empty
  }
appInfo =
  
  ## (application information) records information about an application which has edited the TEI file. [2.3.11. The Application Information Element]
  element appInfo {
    model.applicationLike+,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    empty
  }
application =
  
  ## provides information about an application which has acted upon the document. [2.3.11. The Application Information Element]
  element application {
    (model.labelLike+, (model.ptrLike* | model.pLike*))
    >> sch:pattern [
         id =
           "myTEI-application-calendar-check-application-constraint-rule-30"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.datable.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-application-calendar-calendar-check-application-constraint-rule-31"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    
    ## supplies an identifier for the application, independent of its version number or display name.
    attribute ident { xsd:Name },
    
    ## supplies a version number for the application, independent of its identifier or display name.
    attribute version {
      xsd:token {
        pattern = "[\d]+[a-z]*[\d]*(\.[\d]+[a-z]*[\d]*){0,3}"
      }
    },
    empty
  }
profileDesc =
  
  ## (text-profile description) provides a detailed description of non-bibliographic aspects of a text, specifically the languages and sublanguages used, the situation in which it was produced, the participants and their setting. [2.4. The Profile Description 2.1.1. The TEI Header and Its Components]
  element profileDesc {
    (langUsage, textClass),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
langUsage =
  
  ## (language usage) describes the languages, sublanguages, registers, dialects, etc. represented within a text. [2.4.2. Language Usage 2.4. The Profile Description 16.3.2. Declarable Elements]
  element langUsage {
    (model.pLike+ | language+),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
language =
  
  ## (language) characterizes a single language or sublanguage used within a text. [2.4.2. Language Usage]
  element language {
    macro.phraseSeq.limited,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    [
      a:documentation [
        "(identifier) Supplies a language code constructed as defined in "
        ns1:a [ href = "https://tools.ietf.org/html/bcp47" "BCP 47" ]
        " which is used to identify the language documented by this element, and which may be referenced by the global "
        ns1:code [ "@xml:lang" ]
        " attribute."
      ]
    ]
    attribute ident {
      xsd:language
      | (
         ##
         "")
    },
    empty
  }
textClass =
  
  ## (text classification) groups information which describes the nature or topic of a text in terms of a standard classification scheme, thesaurus, etc. [2.4.3. The Text Classification]
  element textClass {
    (keywords)*,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
keywords =
  
  ## (keywords) contains a list of keywords or phrases identifying the topic or nature of a text. [2.4.3. The Text Classification]
  element keywords {
    (term+),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    [
      a:documentation [
        "identifies the controlled vocabulary within which the set of keywords concerned is defined, for example by a "
        ns1:code [ "<taxonomy>" ]
        " element, or by some other resource."
      ]
    ]
    attribute scheme {
      xsd:anyURI { pattern = "\S+" }
    }?,
    empty
  }
revisionDesc =
  
  ## (revision description) summarizes the revision history for a file. [2.6. The Revision Description 2.1.1. The TEI Header and Its Components]
  element revisionDesc {
    (change+),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
change =
  
  ## (change) documents a change or set of changes made during the production of a source document, or during the revision of an electronic file. [2.6. The Revision Description 2.4.1. Creation 12.7. Identifying Changes and Revisions]
  element change {
    macro.specialPara
    >> sch:pattern [
         id = "myTEI-change-calendar-check-change-constraint-rule-32"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.ascribed.attributes,
    att.datable.w3c.attribute.when,
    att.datable.w3c.attribute.from,
    att.datable.w3c.attribute.to,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-change-calendar-calendar-check-change-constraint-rule-33"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
att.global.linking.attributes = att.global.linking.attribute.corresp
att.global.linking.attribute.corresp =
  
  ## (corresponds) points to elements that correspond to the current element in some way.
  attribute corresp {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
ab =
  
  ## (anonymous block) contains any component-level unit of text, acting as a container for phrase or inter level elements analogous to, but without the same constraints as, a paragraph. [17.3. Blocks, Segments, and Anchors]
  element ab {
    macro.abContent
    >> sch:pattern [
         id =
           "myTEI-ab-abstractModel-structure-ab-in-l-or-lg-constraint-rule-34"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ab"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "(ancestor::tei:l or ancestor::tei:lg) and not( ancestor::tei:floatingText |parent::tei:figure |parent::tei:note )"
             "\x{a}" ~
             "          Abstract model violation: Lines may not contain higher-level divisions such as p or ab, unless ab is a child of figure or note, or is a descendant of floatingText.\x{a}" ~
             "        "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.linking.attribute.corresp,
    att.global.change.attribute.change,
    att.cmc.attributes,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "MainZone"
      | 
        ##
        "TitlePageZone"
      | 
        ##
        "DropCapitalZone"
    }?,
    empty
  }
msDesc =
  
  ## (manuscript description) contains a description of a single identifiable manuscript or other text-bearing object such as an early printed book. [11.1. Overview]
  element msDesc {
    (msIdentifier,
     model.headLike*,
     (model.pLike+ | (msContents | physDesc | additional)*))
    >> sch:pattern [
         id = "myTEI-msDesc-one_ms_singleton_max-constraint-rule-35"
         "\x{a}" ~
         "            "
         sch:rule [
           context =
             "tei:msContents|tei:physDesc|tei:history|tei:additional"
           "\x{a}" ~
           "               "
           sch:let [ name = "gi" value = "name(.)" ]
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "preceding-sibling::*[ name(.) eq $gi ]                           and                           not( following-sibling::*[ name(.) eq $gi ] )"
             "\x{a}" ~
             "          Only one "
             sch:name [ ]
             " is allowed as a child of "
             sch:value-of [ select = "name(..)" ]
             ".\x{a}" ~
             "        "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    empty
  }
dim =
  
  ## contains any single measurement forming part of a dimensional specification of some sort. [11.3.4. Dimensions]
  element dim {
    macro.xtext,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.typed.attribute.type,
    att.dimensions.attributes,
    empty
  }
signatures =
  
  ## (signatures) contains discussion of the leaf or quire signatures found within a codex or similar object. [11.3.7. Catchwords, Signatures, Secundo Folio]
  element signatures {
    macro.specialPara
    >> sch:pattern [
         id = "myTEI-signatures-signatures_in_msDesc-constraint-rule-36"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:signatures"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "ancestor::tei:msDesc or ancestor::tei:egXML"
             "The "
             sch:name [ ]
             " element should not be used outside of msDesc."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    empty
  }
msIdentifier =
  
  ## (manuscript identifier) contains the information required to identify the manuscript or similar object being described. [11.4. The Manuscript Identifier]
  element msIdentifier {
    ((country?, settlement?, institution?, idno*), empty*)
    >> sch:pattern [
         id = "myTEI-msIdentifier-msId_minimal-constraint-rule-37"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:msIdentifier"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "not( parent::tei:msPart )                           and                           ( child::*[1]/self::idno  or  child::*[1]/self::altIdentifier  or  normalize-space(.) eq '')"
             "An msIdentifier must contain either a repository or location."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    empty
  }
institution =
  
  ## (institution) contains the name of an organization such as a university or library, with which a manuscript or other object is identified, generally its holding institution. [11.4. The Manuscript Identifier]
  element institution {
    macro.phraseSeq.limited,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.naming.attribute.nymRef,
    att.canonical.attribute.key,
    empty
  }
msContents =
  
  ## (manuscript contents) describes the intellectual content of a manuscript, manuscript part, or other object either as a series of paragraphs or as a series of structured manuscript items. [11.6. Intellectual Content]
  element msContents {
    (model.pLike+ | empty),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
physDesc =
  
  ## (physical description) contains a full physical description of a manuscript, manuscript part, or other object optionally subdivided using more specialized elements from the model.physDescPart class. [11.7. Physical Description]
  element physDesc {
    (model.pLike*, objectDesc?),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    empty
  }
objectDesc =
  
  ## (object description) contains a description of the physical components making up the object which is being described. [11.7.1. Object Description]
  element objectDesc {
    (model.pLike+ | supportDesc?),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    empty
  }
supportDesc =
  
  ## (support description) groups elements describing the physical support for the written part of a manuscript or other object. [11.7.1. Object Description]
  element supportDesc {
    (model.pLike+ | (support?, extent?)),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
support =
  
  ## (support) contains a description of the materials etc. which make up the physical support for the written part of a manuscript or other object. [11.7.1. Object Description]
  element support {
    macro.specialPara,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
additional =
  
  ## (additional) groups additional information, combining bibliographic information about a manuscript or other object, or surrogate copies of it, with curatorial or administrative information. [11.9. Additional Information]
  element additional {
    ((surrogates?, listBibl?) | model.pLike+),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
surrogates =
  
  ## (surrogates) contains information about any representations of the manuscript or other object being described which may exist in the holding institution or elsewhere. [11.9. Additional Information]
  element surrogates {
    macro.specialPara,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
model.persNamePart = surname | forename
model.persNamePart_alternation = surname | forename
model.persNamePart_sequence = surname, forename
model.persNamePart_sequenceOptional = surname?, forename?
model.persNamePart_sequenceOptionalRepeatable = surname*, forename*
model.persNamePart_sequenceRepeatable = surname+, forename+
orgName =
  
  ## (organization name) contains an organizational name. [14.2.2. Organizational Names]
  element orgName {
    macro.phraseSeq
    >> sch:pattern [
         id = "myTEI-orgName-calendar-check-orgName-constraint-rule-38"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.datable.w3c.attribute.when,
    att.datable.w3c.attribute.from,
    att.datable.w3c.attribute.to,
    att.personal.attribute.sort,
    att.naming.attribute.nymRef,
    att.canonical.attribute.key,
    att.typed.attributes,
    att.cmc.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-orgName-calendar-calendar-check-orgName-constraint-rule-39"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
persName =
  
  ## (personal name) contains a proper noun or proper-noun phrase referring to a person, possibly including one or more of the person's forenames, surnames, honorifics, added names, etc. [14.2.1. Personal Names]
  element persName {
    macro.phraseSeq
    >> sch:pattern [
         id =
           "myTEI-persName-calendar-check-persName-constraint-rule-40"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.datable.attributes,
    att.personal.attribute.sort,
    att.naming.attribute.nymRef,
    att.canonical.attribute.ref,
    att.cmc.attributes,
    
    ## may be used to specify further information about the entity referenced by this name in the form of a set of whitespace-separated values, for example the occupation of a person, or the status of a place.
    attribute role {
      list {
        (
         ##
         "presumed_author"
         | 
           ##
           "presumed_printer"
         | 
           ##
           "false_printer"
         | 
           ##
           "false_author")+
      }
    }?,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-persName-calendar-calendar-check-persName-constraint-rule-41"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
surname =
  
  ## (surname) contains a family (inherited) name, as opposed to a given, baptismal, or nick name. [14.2.1. Personal Names]
  element surname {
    macro.phraseSeq,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.personal.attribute.sort,
    att.naming.attribute.role,
    att.naming.attribute.nymRef,
    att.cmc.attributes,
    empty
  }
forename =
  
  ## (forename) contains a forename, given or baptismal name. [14.2.1. Personal Names]
  element forename {
    macro.phraseSeq,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.personal.attribute.sort,
    att.naming.attribute.role,
    att.naming.attribute.nymRef,
    att.cmc.attributes,
    empty
  }
country =
  
  ## (country) contains the name of a geo-political unit, such as a nation, country, colony, or commonwealth, larger than or administratively superior to a region and smaller than a bloc. [14.2.3. Place Names]
  element country {
    macro.phraseSeq
    >> sch:pattern [
         id = "myTEI-country-calendar-check-country-constraint-rule-42"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.naming.attribute.role,
    att.naming.attribute.nymRef,
    att.canonical.attribute.key,
    att.datable.attributes,
    att.cmc.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-country-calendar-calendar-check-country-constraint-rule-43"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
settlement =
  
  ## (settlement) contains the name of a settlement such as a city, town, or village identified as a single geo-political or administrative unit. [14.2.3. Place Names]
  element settlement {
    macro.phraseSeq
    >> sch:pattern [
         id =
           "myTEI-settlement-calendar-check-settlement-constraint-rule-44"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.naming.attribute.role,
    att.naming.attribute.nymRef,
    att.datable.attributes,
    att.cmc.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-settlement-calendar-calendar-check-settlement-constraint-rule-45"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
TEI =
  [
    a:documentation [
      "(TEI document) contains a single TEI-conformant document, combining a single TEI header with one or more members of the model.resource class. Multiple "
      ns1:code [ "<TEI>" ]
      " elements may be combined within a "
      ns1:code [ "<TEI>" ]
      " (or "
      ns1:code [ "<teiCorpus>" ]
      ") element. [4. Default Text Structure 16.1. Varieties of Composite Text]"
    ]
  ]
  element TEI {
    (teiHeader,
     ((model.resource+, TEI*) | TEI+))
    >> sch:ns [ prefix = "tei" uri = "http://www.tei-c.org/ns/1.0" ]
    >> sch:ns [ prefix = "xs" uri = "http://www.w3.org/2001/XMLSchema" ]
    >> sch:ns [
         prefix = "rng"
         uri = "http://relaxng.org/ns/structure/1.0"
       ]
    >> sch:ns [
         prefix = "rna"
         uri = "http://relaxng.org/ns/compatibility/annotations/1.0"
       ]
    >> sch:ns [
         prefix = "sch"
         uri = "http://purl.oclc.org/dsdl/schematron"
       ]
    >> sch:ns [
         prefix = "sch1x"
         uri = "http://www.ascc.net/xml/schematron"
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    
    ## specifies the version number of the TEI Guidelines against which this document is valid.
    attribute version {
      xsd:token { pattern = "[\d]+(\.[\d]+){0,2}" }
    }?,
    empty
  }
\text =
  
  ## (text) contains a single text of any kind, whether unitary or composite, for example a poem or drama, a collection of essays, a novel, a dictionary, or a corpus sample. [4. Default Text Structure 16.1. Varieties of Composite Text]
  element text {
    (model.global*, (body), model.global*),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.typed.attributes,
    empty
  }
body =
  
  ## (text body) contains the whole body of a single unitary text, excluding any front or back matter. [4. Default Text Structure]
  element body {
    (model.global*,
     (model.divTop, (model.global | model.divTop)*)?,
     (model.divGenLike, (model.global | model.divGenLike)*)?,
     ((model.divLike, (model.global | model.divGenLike)*)+
      | (model.div1Like, (model.global | model.divGenLike)*)+
      | (((model.common), model.global*)+,
         ((model.divLike, (model.global | model.divGenLike)*)+
          | (model.div1Like, (model.global | model.divGenLike)*)+)?)),
     (model.divBottom, model.global*)*),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    empty
  }
\div =
  
  ## (text division) contains a subdivision of the front, body, or back of a text. [4.1. Divisions of the Body]
  element div {
    ((model.divTop | model.global)*,
     ((((model.divLike | model.divGenLike), model.global*)+
       | ((model.common, model.global*)+,
          ((model.divLike | model.divGenLike), model.global*)*)),
      (model.divBottom, model.global*)*)?)
    >> sch:pattern [
         id =
           "myTEI-div-abstractModel-structure-div-in-l-or-lg-constraint-rule-46"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:div"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "(ancestor::tei:l or ancestor::tei:lg) and not(ancestor::tei:floatingText)"
             "\x{a}" ~
             "          Abstract model violation: Lines may not contain higher-level structural elements such as div, unless div is a descendant of floatingText.\x{a}" ~
             "        "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "myTEI-div-abstractModel-structure-div-in-ab-or-p-constraint-rule-47"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:div"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "(ancestor::tei:p or ancestor::tei:ab) and not(ancestor::tei:floatingText)"
             "\x{a}" ~
             "          Abstract model violation: p and ab may not contain higher-level structural elements such as div, unless div is a descendant of floatingText.\x{a}" ~
             "        "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.linking.attribute.corresp,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.typed.attributes,
    empty
  }
att.global.change.attributes = att.global.change.attribute.change
att.global.change.attribute.change =
  [
    a:documentation [
      "points to one or more "
      ns1:code [ "<change>" ]
      " elements documenting a state or revision campaign to which the element bearing this attribute and its children have been assigned by the encoder."
    ]
  ]
  attribute change {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
att.coordinated.attributes =
  att.coordinated.attribute.ulx,
  att.coordinated.attribute.uly,
  att.coordinated.attribute.lrx,
  att.coordinated.attribute.lry,
  att.coordinated.attribute.points
att.coordinated.attribute.ulx =
  
  ## gives the x coordinate value for the upper left corner of a rectangular space.
  attribute ulx {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
att.coordinated.attribute.uly =
  
  ## gives the y coordinate value for the upper left corner of a rectangular space.
  attribute uly {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
att.coordinated.attribute.lrx =
  
  ## gives the x coordinate value for the lower right corner of a rectangular space.
  attribute lrx {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
att.coordinated.attribute.lry =
  
  ## gives the y coordinate value for the lower right corner of a rectangular space.
  attribute lry {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
att.coordinated.attribute.points =
  
  ## identifies a two dimensional area by means of a series of pairs of numbers, each of which gives the x,y coordinates of a point on a line enclosing the area.
  attribute points {
    list {
      xsd:token {
        pattern = "(-?[0-9]+(\.[0-9]+)?,-?[0-9]+(\.[0-9]+)?)"
      },
      xsd:token {
        pattern = "(-?[0-9]+(\.[0-9]+)?,-?[0-9]+(\.[0-9]+)?)"
      },
      xsd:token {
        pattern = "(-?[0-9]+(\.[0-9]+)?,-?[0-9]+(\.[0-9]+)?)"
      },
      xsd:token {
        pattern = "(-?[0-9]+(\.[0-9]+)?,-?[0-9]+(\.[0-9]+)?)"
      }*
    }
  }?
sourceDoc =
  
  ## contains a transcription or other representation of a single source document potentially forming part of a dossier gÃ©nÃ©tique or collection of sources. [12.1. Digital Facsimiles 12.2.2. Embedded Transcription]
  element sourceDoc {
    (model.global | model.graphicLike | surface)+,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    empty
  }
surface =
  
  ## defines a written surface as a two-dimensional coordinate space, optionally grouping one or more graphic representations of that space, zones of interest within that space, and, when using an embedded transcription approach, transcriptions of the writing within them. [12.1. Digital Facsimiles 12.2.2. Embedded Transcription]
  element surface {
    ((model.global | model.labelLike | model.graphicLike)*,
     ((zone | line | path | surface), model.global*)*),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.coordinated.attribute.ulx,
    att.coordinated.attribute.uly,
    att.coordinated.attribute.lrx,
    att.coordinated.attribute.lry,
    empty
  }
zone =
  [
    a:documentation [
      "defines any two-dimensional area within a "
      ns1:code [ "<surface>" ]
      " element. [12.1. Digital Facsimiles 12.2.2. Embedded Transcription]"
    ]
  ]
  element zone {
    (text
     | model.gLike
     | model.graphicLike
     | model.global
     | surface
     | model.linePart)*,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.linking.attribute.corresp,
    att.global.change.attribute.change,
    att.global.source.attribute.source,
    att.coordinated.attributes,
    att.typed.attribute.subtype,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ##
      "DamageZone"
      | 
        ##
        "DefaultLine"
      | 
        ##
        "DropCapitalLine"
      | 
        ##
        "DropCapitalZone"
      | 
        ##
        "GraphicZone"
      | 
        ##
        "HeadingLine"
      | 
        ##
        "InterlinearLine"
      | 
        ##
        "CustomLine:Faits"
      | 
        ##
        "MainZone"
      | 
        ##
        "MarginTextZone"
      | 
        ##
        "MarginTextZone:handwrittenAddition"
      | 
        ##
        "NumberingZone"
      | 
        ##
        "QuireMarksZone"
      | 
        ##
        "RunningTitleZone"
      | 
        ##
        "StampZone"
      | 
        ##
        "TableZone"
      | 
        ##
        "TitlePageZone"
    }?,
    [
      a:defaultValue = "0"
      a:documentation [
        "indicates the amount by which this zone has been rotated clockwise, with respect to the normal orientation of the parent "
        ns1:code [ "<surface>" ]
        " element as implied by the dimensions given in the "
        ns1:code [ "<msDesc>" ]
        " element or by the coordinates of the "
        ns1:code [ "<surface>" ]
        " itself. The orientation is expressed in arc degrees."
      ]
    ]
    attribute rotate { xsd:nonNegativeInteger }?,
    empty
  }
path =
  [
    a:documentation [
      "(path) defines any line passing through two or more points within a "
      ns1:code [ "<surface>" ]
      " element. [12.1. Digital Facsimiles 12.2.2. Embedded Transcription]"
    ]
  ]
  element path {
    empty
    >> sch:pattern [
         id = "myTEI-path-pathmustnotbeclosed-constraint-rule-48"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:path[@points]"
           "\x{a}" ~
           "               "
           sch:let [
             name = "firstPair"
             value = "tokenize( normalize-space( @points ), ' ')[1]"
           ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "lastPair"
             value =
               "tokenize( normalize-space( @points ), ' ')[last()]"
           ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "firstX"
             value = "xs:float( substring-before( $firstPair, ',') )"
           ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "firstY"
             value = "xs:float( substring-after( $firstPair, ',') )"
           ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "lastX"
             value = "xs:float( substring-before( $lastPair, ',') )"
           ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "lastY"
             value = "xs:float( substring-after( $lastPair, ',') )"
           ]
           "\x{a}" ~
           "               "
           sch:report [
             test = "$firstX eq $lastX and $firstY eq $lastY"
             "The first and\x{a}" ~
             "          last elements of this path are the same. To specify a closed polygon, use\x{a}" ~
             "          the zone element rather than the path element. "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    att.typed.attribute.type,
    
    ## identifies a line within the container or bounding box specified by the parent element by means of a series of two or more pairs of numbers, each of which gives the x,y coordinates of a point on the line.
    attribute points {
      list {
        xsd:token {
          pattern = "(-?[0-9]+(\.[0-9]+)?,-?[0-9]+(\.[0-9]+)?)"
        },
        xsd:token {
          pattern = "(-?[0-9]+(\.[0-9]+)?,-?[0-9]+(\.[0-9]+)?)"
        },
        xsd:token {
          pattern = "(-?[0-9]+(\.[0-9]+)?,-?[0-9]+(\.[0-9]+)?)"
        }*
      }
    }?,
    empty
  }
fw =
  
  ## (forme work) contains a running head (e.g. a header, footer), catchword, or similar material appearing on the current page. [12.6. Headers, Footers, and Similar Matter]
  element fw {
    macro.phraseSeq,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.linking.attribute.corresp,
    att.global.change.attribute.change,
    att.placement.attributes,
    
    ## classifies the material encoded according to some useful typology.
    attribute type {
      
      ##
      "NumberingZone"
      | 
        ##
        "QuireMarksZone"
      | 
        ##
        "RunningTitleZone"
    }?,
    empty
  }
line =
  
  ## contains the transcription of a topographic line in the source document [12.2.2. Embedded Transcription]
  element line {
    (text | model.global | model.gLike | model.linePart)*,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.change.attribute.change,
    empty
  }
start = TEI
